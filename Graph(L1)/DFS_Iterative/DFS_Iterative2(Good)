import java.io.*;
import java.util.*;

public class Main {
   static class Edge {
      int src;
      int nbr;

      Edge(int src, int nbr) {
         this.src = src;
         this.nbr = nbr;
      }
   }

   public static void main(String[] args) throws Exception {
      BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

      int vtces = Integer.parseInt(br.readLine());
      ArrayList<Edge>[] graph = new ArrayList[vtces];
      for (int i = 0; i < vtces; i++) {
         graph[i] = new ArrayList<>();
      }

      int edges = Integer.parseInt(br.readLine());
      for (int i = 0; i < edges; i++) {
         String[] parts = br.readLine().split(" ");
         int v1 = Integer.parseInt(parts[0]);
         int v2 = Integer.parseInt(parts[1]);
         graph[v1].add(new Edge(v1, v2));
         graph[v2].add(new Edge(v2, v1));
      }

      int src = Integer.parseInt(br.readLine());

      iterativeDFS(src,graph); 
   }

   static void iterativeDFS(int src, ArrayList<Edge>[]graph){

    Stack<Pair>st= new Stack<>();
    boolean[]vis= new boolean[graph.length];
    st.push(new Pair(src,src+""));
    while(st.size()!=0){
       
       Pair top=st.pop();
       if(vis[top.vtx])
        continue;
       vis[top.vtx]=true;
       System.out.println(top.vtx+"@"+top.path);

       for(Edge edg:graph[top.vtx]){
          if(!vis[edg.nbr]){
             st.push(new Pair(edg.nbr,top.path+edg.nbr));
          }
       }

    }

   }

   static class Pair{
      int vtx;
      String path;
      Pair(int v, String p){
         vtx=v;
         path=p;
      }
   }
}