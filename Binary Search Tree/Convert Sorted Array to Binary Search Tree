// Time complexity = O(n)
// Space complexity = O(logn) , height of tree=logn .Worst case-> O(n) Skewed Tree

class Solution {
    public TreeNode sortedArrayToBST(int[] nums) {
        return helper(nums, 0, nums.length - 1);
    }
    
    private TreeNode helper(int[] nums, int left, int right) {
        if(left > right) {
            return null;
        }

        int middle = (left + right) / 2;
        
        TreeNode root = new TreeNode(nums[middle]);
        root.left = helper(nums, left, middle - 1);
        root.right = helper(nums, middle + 1, right);
        
        return root;
    }
}