//{ Driver Code Starts
//Initial Template for Java

import java.io.*;
import java.util.*;

class GFG{
    public static void main(String args[])throws IOException
    {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(in.readLine());
        while(t-- > 0){
            String str = in.readLine();
            Solution ob = new Solution();
            System.out.println(ob.palindromicPartition(str));
        }
    }
}
// } Driver Code Ends


//User function Template for Java

class Solution{
    static int palindromicPartition(String str)
    {
        int len=str.length();
        int [][]dp = new int[len][len];
        
        for(int i=0;i<len;i++)
         for(int j=0;j<len;j++)
          dp[i][j]=-1;
         
        return solve(0,len-1,str,dp);
    }
    
  static int  solve(int i,int j,String s,int [][]dp){
      if(i>=j) return 0;
      
      if(dp[i][j]!=-1)
       return dp[i][j];
       
      if(isPalin(s,i,j))
        return dp[i][j]=0;
      
      int min=Integer.MAX_VALUE;
      
      for(int k=i;k<=j-1;k++)
      {
          int tempAns=solve(i,k,s,dp)+1+solve(k+1,j,s,dp);
          min=Math.min(min,tempAns);
      }
      
      return dp[i][j]=min;
  }
  
  static boolean isPalin(String s,int i,int j){
      while(i<=j){
          if(s.charAt(i++)!=s.charAt(j--)) return false;
      }
      return true;
  }
}